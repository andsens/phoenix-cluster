#!/usr/bin/env bash
# shellcheck source-path=../..
set -Eeo pipefail
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../..")

main() {
  source "$PKGROOT/lib/common.sh"

  DOC="install-cilium - Install cilium in k3s
Usage:
  install-cilium
"
# docopt parser below, refresh this parser with `docopt.sh install-cilium`
# shellcheck disable=2016,1090,1091,2034
docopt() { source "$PKGROOT/.upkg/andsens/docopt.sh/docopt-lib.sh" '1.0.0' || {
ret=$?; printf -- "exit %d\n" "$ret"; exit "$ret"; }; set -e
trimmed_doc=${DOC:0:62}; usage=${DOC:39:23}; digest=014c6; shorts=(); longs=()
argcounts=(); node_0(){ required ; }; node_1(){ required 0; }
cat <<<' docopt_exit() { [[ -n $1 ]] && printf "%s\n" "$1" >&2
printf "%s\n" "${DOC:39:23}" >&2; exit 1; }'; unset ; parse 1 "$@"; return 0
local prefix=${DOCOPT_PREFIX:-''}; unset ; local docopt_i=1
[[ $BASH_VERSION =~ ^4.3 ]] && docopt_i=2; for ((;docopt_i>0;docopt_i--)); do
declare -p ; done; }
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$PKGROOT/.upkg/andsens/docopt.sh/docopt-lib.sh"' install-cilium`
  eval "$(docopt "$@")"
  confirm_machine_id k8sMaster

  info "Waiting for k3s to become ready"
  local max_wait=300 wait_left=300
  until kubectl get -n kube-system deployment coredns -o name >/dev/null 2>&1; do
    sleep 1
    ((--wait_left > 0)) || fatal "Timed out after %d seconds waiting for k3s to become ready." "$max_wait"
  done

  if ! kubectl get -n kube-system deployment cilium-operator -o name >/dev/null 2>&1; then
    info "Cilium is not installed, installing now"
    /usr/local/bin/cilium install --version=1.15.1 \
      --set ipam.mode=cluster-pool \
      --set ipam.operator.clusterPoolIPv4PodCIDRList="$(get_setting cluster.cidrs.podIPv4)" \
      --set ipam.operator.clusterPoolIPv6PodCIDRList="$(get_setting cluster.cidrs.podIPv6)" \
      --set ipam.operator.clusterPoolIPv4MaskSize=24 \
      --set ipam.operator.clusterPoolIPv6MaskSize=112 \
      --set k8sServiceHost="$(get_setting cluster.cilium.k8sServiceHost)" \
      --set bgpControlPlane.enabled=true \
      --set ipv6.enabled=true \
      --set bpf.masquerade=true \
      --set enableIPv6Masquerade=false \
      --set envoy.enabled=false \
      --set hubble.enabled=false \
      --set hubble.relay.gops.enabled=false \
      --set kubeProxyReplacement=true \
      --set encryption.enabled=true \
      --set encryption.type=wireguard \
      --set encryption.nodeEncryption=true \
      --set socketLB.enabled=true \
      --set kubeConfigPath=/etc/rancher/k3s/k3s.yaml
    kubectl patch -n kube-system cm cilium-config --patch-file <(printf "
data:
  ipv6-service-range: \"%s\"
" "$(get_setting cluster.cidrs.svcIPv6)")
  else
    info "Cilium is already installed"
  fi

  info "Waiting for Cilium to become ready"
  max_wait=300 wait_left=300
  until [[ $(kubectl get -n kube-system deployment cilium-operator -ojsonpath='{.status.readyReplicas}' 2>&1) = 1 ]]; do
    sleep 1
    ((--wait_left > 0)) || fatal "Timed out after %d seconds waiting for Cilium to become ready" "$max_wait"
  done
  info "Cilium is ready"
}

main "$@"
