#!/usr/bin/env bash
# shellcheck source-path=..
set -Eeo pipefail; shopt -s inherit_errexit
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")

main() {
  if ! sudo apt-get install -qq --no-install-recommends wget ca-certificates git jq yq; then
    printf "install-deps.sh: Unable to install dependencies through apt-get. You will need to install %s manually some other way\n" "$dep" >&2
    return 1
  fi
  if ! type upkg >/dev/null 2>&1; then
# Read the fully documented version on github.com/orbit-online/upkg
bash -ec 'P=${INSTALL_PREFIX:-$([[ $EUID = 0 ]]&&echo /usr/local||echo "$HOME/.local")};\
u=https://github.com/orbit-online/upkg/releases/download/v0.25.0/upkg-install.tar.gz;\
c=0fda9726f082d486b2d72871a1ba80c103356bc2d07e91e82ffd1728537edc69; echo>&2;\
t=$(mktemp); trap "rm \"$t\"" EXIT; wget -qO"$t" "$u" || curl -fsLo"$t" "$u";\
shasum -a 256 -c <(echo "$c  $t") >/dev/null;mkdir -p "$P";cd "$P"; for f in $(\
tar tzf "$t"); do [[ $f != */ && -e $f ]] && { echo "$f already exists">&2;\
exit 1; }; done; tar xzf "$t";echo "Î¼pkg has been installed and can now be \
invoked with \"upkg\"" >&2;type jq &>/dev/null||echo "WARNING: \"jq\" was not \
found in \$PATH. jq is a hard dependency." >&2'
fi
  (cd "$PKGROOT"; upkg install)

  source "$PKGROOT/lib/common.sh"

  DOC="install-deps - Install local dependencies
Usage:
  install-deps
"
# docopt parser below, refresh this parser with `docopt.sh install-deps`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { source "$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh" '2.0.0' || {
ret=$?;printf -- "exit %d\n" "$ret";exit "$ret";};set -e;trimmed_doc=${DOC:0:67}
usage=${DOC:36:31};digest=1c414;options=();node_0(){ value MACHINE a;};node_1(){
optional 0;};cat <<<' docopt_exit() { [[ -n $1 ]] && printf "%s\n" "$1" >&2
printf "%s\n" "${DOC:36:31}" >&2;exit 1;}';local varnames=(MACHINE) varname
for varname in "${varnames[@]}"; do unset "var_$varname";done;parse 1 "$@"
local p=${DOCOPT_PREFIX:-''};for varname in "${varnames[@]}"; do unset \
"$p$varname";done;eval $p'MACHINE=${var_MACHINE:-};';local docopt_i=1;[[ \
$BASH_VERSION =~ ^4.3 ]] && docopt_i=2;for ((;docopt_i>0;docopt_i--)); do for \
varname in "${varnames[@]}"; do declare -p "$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh"' install-deps`
  eval "$(docopt "$@")"

  TMPDIR=$(mktemp -d)
  # shellcheck disable=2064
  trap "rm -rf \"$TMPDIR\"" EXIT
  sudo apt-get install -y --no-install-recommends qemu-utils moreutils
  wget -qO"$HOME/.local/bin/kpt" https://github.com/kptdev/kpt/releases/download/v1.0.0-beta.49/kpt_linux_amd64
  wget -qO"$HOME/.local/bin/kubectl" https://storage.googleapis.com/kubernetes-release/release/v1.28.4/bin/linux/amd64/kubectl
  wget -qO"$TMPDIR/k9s.deb" https://github.com/derailed/k9s/releases/download/v0.32.4/k9s_linux_amd64.deb
  wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.1/kustomize_v5.4.1_linux_amd64.tar.gz | tar xzC "$HOME/.local/bin" kustomize
  wget -qO- https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubectx_v0.9.5_linux_x86_64.tar.gz | tar xzC "$HOME/.local/bin" kubectx
  wget -qO- https://github.com/ahmetb/kubectx/releases/download/v0.9.5/kubens_v0.9.5_linux_x86_64.tar.gz | tar xzC "$HOME/.local/bin" kubens
  wget -qO- https://github.com/stern/stern/releases/download/v1.28.0/stern_1.28.0_linux_amd64.tar.gz | tar xzC "$HOME/.local/bin" stern
  wget -qO- https://get.helm.sh/helm-v3.14.3-linux-amd64.tar.gz | tar xzC "$HOME/.local/bin" --strip-components 1 linux-amd64/helm
  wget -qO- https://dl.smallstep.com/gh-release/cli/gh-release-header/v0.26.0/step_linux_0.26.0_amd64.tar.gz | tar xzC "$HOME/.local/bin" --strip-components 2 step_0.26.0/bin/step
  chmod +x "$HOME/.local/bin"/{kubectl,kpt,kustomize,kubectx,kubens,stern,helm,step}
  sudo dpkg -i "$TMPDIR/k9s.deb"
}

main "$@"
