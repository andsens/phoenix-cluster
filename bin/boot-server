#!/usr/bin/env bash
# shellcheck source-path=..
set -Eeo pipefail; shopt -s inherit_errexit
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")

main() {
  source "$PKGROOT/.upkg/records.sh/records.sh"
  source "$PKGROOT/.upkg/path-tools/path-tools.sh"
  PATH=$(path_prepend "$PKGROOT/.upkg/.bin")
  source "$PKGROOT/lib/certificates.sh"

  local user_steppath
  user_steppath=${STEPPATH:-$(step path --base)}

  export STEPPATH=$PKGROOT/.step
  initialize_certificates

  python3 -m venv "$PKGROOT/.venv"
  "$PKGROOT/.venv/bin/pip3" install -qr "$PKGROOT/workloads/node/containers/boot-server/requirements.txt"

  info "Binding to port 67 & 69 requires administrator privileges, you might be asked for your sudo password"
  mkdir -p "$PKGROOT/images"
  PYTHONPATH=$PKGROOT/workloads/node/scripts \
    exec sudo --preserve-env=PYTHONPATH "$PKGROOT/.venv/bin/python3" \
      -m boot-server \
      --images "$PKGROOT/images" \
      --certfile "$BOOT_SERVER_BUNDLE" --keyfile "$BOOT_SERVER_KEY" \
      --admin-pubkey="$user_steppath/system:admin.pub" \
      --sb-pubkey="$SB_PUBKEY" \
      --steppath="$STEPPATH" \
      --boot-map="$PKGROOT/workloads/node/config/boot-map.yaml" "$@"
}

main "$@"
