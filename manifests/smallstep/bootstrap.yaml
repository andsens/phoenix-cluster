---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
rules:
- apiGroups: [""]
  resources: [secrets]
  verbs: [create]
- apiGroups: [""]
  resources: [secrets]
  resourceNames: [smallstep-root, smallstep-intermediate, step-issuer-provisioner, ssh-host-provisioner, kube-apiserver-client-ca]
  verbs: [get, delete]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bootstrap
subjects:
- kind: ServiceAccount
  name: bootstrap
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
rules:
- apiGroups: [certmanager.step.sm]
  resources: [stepclusterissuers]
  verbs: [create]
- apiGroups: [certmanager.step.sm]
  resources: [stepclusterissuers]
  resourceNames: [step-issuer]
  verbs: [get, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bootstrap
subjects:
- kind: ServiceAccount
  name: bootstrap
---
apiVersion: secretgenerator.mittwald.de/v1alpha1
kind: StringSecret
metadata:
  name: ssh-host-provisioner-password
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: issuer
spec:
  fields:
  - fieldName: password
    length: "32"
---
apiVersion: secretgenerator.mittwald.de/v1alpha1
kind: StringSecret
metadata:
  name: step-issuer-provisioner-password
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: issuer
spec:
  fields:
  - fieldName: password
    length: "32"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smallstep
        app.kubernetes.io/component: bootstrap
        cluster.local/allow-apiserver-egress: "true"
    spec:
      restartPolicy: Never
      serviceAccountName: bootstrap
      securityContext:
        fsGroup: 1000
      containers:
      - name: bootstrap
        image: cr.step.sm/smallstep/step-ca-bootstrap:latest
        command: [/home/step/bootstrap/bootstrap.sh]
        securityContext:
          readOnlyRootFilesystem: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PKI_NAME
          value: cluster.pkiName
        - name: K8S_API_HOST
          value: machines.k8sMaster.hostname
        - name: KUBE_CONFIG_OWNER
          value: admin.uid
        volumeMounts:
        - name: bootstrap
          mountPath: /home/step/bootstrap
          readOnly: true
        - name: step-issuer-provisioner-password
          mountPath: /home/step/step-issuer-provisioner-password
          readOnly: true
        - name: ssh-host-provisioner-password
          mountPath: /home/step/ssh-host-provisioner-password
          readOnly: true
        - name: certs
          mountPath: /home/step/certs
          readOnly: false
        - name: persistent-certs
          mountPath: /home/step/persistent-certs
          readOnly: false
        - name: config
          mountPath: /home/step/config
          readOnly: true
        - name: templates
          mountPath: /home/step/templates
          readOnly: true
      volumes:
      - name: bootstrap
        configMap:
          name: bootstrap
          defaultMode: 0777
      - name: step-issuer-provisioner-password
        secret:
          secretName: step-issuer-provisioner-password
      - name: ssh-host-provisioner-password
        secret:
          secretName: ssh-host-provisioner-password
      - name: certs
        emptyDir:
          medium: Memory
      - name: persistent-certs
        persistentVolumeClaim:
          claimName: step-ca-certs
      - name: config
        configMap:
          name: step-ca-config
      - name: templates
        configMap:
          name: step-ca-templates
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: step-ca-certs
  labels:
    app.kubernetes.io/name: smallstep
    app.kubernetes.io/component: bootstrap
spec:
  storageClassName: nas-nfs-workloads
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 1Mi
