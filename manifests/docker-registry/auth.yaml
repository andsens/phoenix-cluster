---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: docker-auth
  labels:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: auth
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: docker-registry
      app.kubernetes.io/component: auth
  ingress:
  - toPorts:
    - ports:
      - port: "5001"
        protocol: TCP
    fromEntities:
    - all
  egress:
  - toPorts:
    - ports:
      - port: "6379"
    toEndpoints:
    - matchLabels:
        app.kubernetes.io/name: docker-registry
        app.kubernetes.io/component: redis
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-auth
  labels:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: auth
  annotations:
    cert-manager.io/issuer: cluster.acmeProvider.issuer
    cert-manager.io/issuer-kind: cluster.acmeProvider.kind
    cert-manager.io/issuer-group: cluster.acmeProvider.group
spec:
  tls:
  - hosts: [cr.DOMAIN]
    secretName: cr-tls
  rules:
  - host: cr.DOMAIN
    http:
      paths:
      - path: /login
        pathType: Prefix
        backend:
          service:
            name: docker-auth
            port:
              name: web
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: docker-auth
            port:
              name: web
---
apiVersion: v1
kind: Service
metadata:
  name: docker-auth
  labels:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: auth
spec:
  selector:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: auth
  ports:
  - name: web
    port: 5001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-auth
  labels:
    app.kubernetes.io/name: docker-registry
    app.kubernetes.io/component: auth
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-registry
      app.kubernetes.io/component: auth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry
        app.kubernetes.io/component: auth
    spec:
      containers:
      - name: docker-auth
        image: cesanta/docker_auth:1.12.0
        args: ['-alsologtostderr', '/config/auth_config.yml']
        securityContext:
          readOnlyRootFilesystem: true
        ports:
        - name: web
          containerPort: 5001
        livenessProbe:
          httpGet:
            path: /
            port: web
          failureThreshold: 20
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: web
          failureThreshold: 20
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /config/auth_config.yml
          subPath: auth_config.yml
        - name: jwt-cert
          mountPath: /config/certs
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: auth-config
      - name: jwt-cert
        secret:
          secretName: distribution-jwt-cert
      - name: tmp
        emptyDir: {}
