---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: coredns
      app.kubernetes.io/component: coredns
  ingress:
  - toPorts:
    - ports:
      - port: "53"
        protocol: UDP
      - port: "53"
        protocol: TCP
    fromEntities:
    - all
  egress:
  - toPorts:
    - ports:
      - port: "2379"
    toEndpoints:
    - matchLabels:
        "k8s:io.kubernetes.pod.namespace": etcd
        app.kubernetes.io/name: etcd
        app.kubernetes.io/component: etcd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
rules:
- apiGroups: [""]
  resources: [endpoints, services, pods, namespaces]
  verbs: [list, watch]
- apiGroups: [discovery.k8s.io]
  resources: [endpointslices]
  verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns
subjects:
- kind: ServiceAccount
  name: coredns
---
apiVersion: v1
kind: Service
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
  annotations:
    io.cilium/lb-ipam-ips: "cluster.coredns.fixedIPv4,cluster.coredns.fixedIPv6"
    external-dns.alpha.kubernetes.io/hostname: ns1.DOMAIN.
spec:
  type: LoadBalancer
  ipFamilies:
  - IPv4
  - IPv6
  ipFamilyPolicy: RequireDualStack
  selector:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
  ports:
  - name: dns-udp
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: coredns
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: coredns
      app.kubernetes.io/component: coredns
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns
        app.kubernetes.io/component: coredns
        cluster.local/allow-apiserver-egress: "true"
    spec:
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      containers:
      - name: coredns
        image: coredns/coredns:1.11.1
        securityContext:
          capabilities:
            add: [NET_BIND_SERVICE]
        args:
        - -conf
        - /etc/coredns/Corefile
        env:
        - name: WAN_IPV4
          value: cluster.wanIPv4
        - name: DOMAIN
          value: cluster.domain
        - name: K8SMASTER_IPV4
          value: machines.k8sMaster.fixedIPv4
        - name: K8SMASTER_IPV6
          value: machines.k8sMaster.fixedIPv6
        ports:
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: dns-tcp
          containerPort: 53
          protocol: TCP
        - name: healthz
          containerPort: 8080
        - name: ready
          containerPort: 8181
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: healthz
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: ready
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - name: home-cluster
          mountPath: /etc/coredns/Corefile
          subPath: config/coredns/Corefile
          readOnly: true
      volumes:
      - name: home-cluster
        nfs:
          server: nfsShares.homeCluster.addr
          path: nfsShares.homeCluster.path
          readOnly: true
