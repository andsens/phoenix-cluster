---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/component: traefik
  ingress:
  - toPorts:
    - ports:
      - port: "8000"
        protocol: TCP
      - port: "8443"
        protocol: TCP
    fromEntities:
    - all
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-frontend
  labels:
    type: frontend
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
  annotations:
    io.cilium/lb-ipam-ips: "RPROXY_SVC_IPV4,RPROXY_SVC_IPV6"
spec:
  type: LoadBalancer
  ipFamilies:
  - IPv4
  - IPv6
  ipFamilyPolicy: RequireDualStack
  selector:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
rules:
- apiGroups: [""]
  resources: [services, endpoints, secrets]
  verbs: [get, list, watch]
- apiGroups: [extensions, networking.k8s.io]
  resources: [ingressclasses, ingresses]
  verbs: [get, list, watch]
- apiGroups: [extensions, networking.k8s.io]
  resources: [ingresses/status]
  verbs: [update]
- apiGroups: [traefik.io, traefik.containo.us]
  resources: [ingressroutes, ingressroutetcps, ingressrouteudps, middlewares, middlewaretcps, tlsoptions, tlsstores, traefikservices, serverstransports]
  verbs: [get, list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: traefik.io/ingress-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/component: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/component: traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/component: traefik
        cluster.local/allow-apiserver-egress: "true"
    spec:
      securityContext:
        fsGroup: 65532
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      containers:
      - name: traefik
        image: docker.io/traefik:v2.11.2
        ports:
        - name: http
          containerPort: 8000
        - name: https
          containerPort: 8443
        - name: web
          containerPort: 9000
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: web
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ping
            port: web
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        volumeMounts:
        - name: config
          mountPath: /etc/traefik/traefik.yaml
          subPath: traefik.yaml
        - name: config
          mountPath: /etc/traefik/file-provider.yaml
          subPath: file-provider.yaml
        - mountPath: /tmp
          name: tmp
      volumes:
      - name: config
        configMap:
          name: traefik
      - name: tmp
        emptyDir: {}
