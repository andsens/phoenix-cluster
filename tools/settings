#!/usr/bin/env bash
# shellcheck source-path=../
set -Eeo pipefail; shopt -s inherit_errexit
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")

main() {
  source "$PKGROOT/lib/common.sh"

  DOC="settings - Retrieve settings
Usage:
  settings get PATH
"
# docopt parser below, refresh this parser with `docopt.sh settings`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { source "$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh" '2.0.0a3' || {
ret=$?;printf -- "exit %d\n" "$ret";exit "$ret";};set -e;trimmed_doc=${DOC:0:55}
usage=${DOC:29:26};digest=5b268;options=();node_0(){ value PATH a;};node_1(){
switch get a:get;};node_2(){ sequence 1 0;};cat <<<' docopt_exit() { [[ -n $1 \
]] && printf "%s\n" "$1" >&2;printf "%s\n" "${DOC:29:26}" >&2;exit 1;}';local \
varnames=(PATH get) varname;for varname in "${varnames[@]}"; do unset \
"var_$varname";done;parse 2 "$@";local p=${DOCOPT_PREFIX:-''};for varname in \
"${varnames[@]}"; do unset "$p$varname";done;eval $p'PATH=${var_PATH:-};'$p'ge'\
't=${var_get:-false};';local docopt_i=1;[[ $BASH_VERSION =~ ^4.3 ]] && \
docopt_i=2;for ((;docopt_i>0;docopt_i--)); do for varname in "${varnames[@]}"; \
do declare -p "$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh"' settings`
  DOCOPT_PREFIX=_
  eval "$(docopt "$@")"
  # shellcheck disable=2153
  get_setting "$_PATH"
}

main "$@"
