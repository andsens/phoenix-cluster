#!/usr/bin/env bash
# shellcheck source-path=..
set -Eeo pipefail; shopt -s inherit_errexit
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")

main() {
  source "$PKGROOT/lib/common.sh"
  source "$PKGROOT/lib/vm.sh"

  DOC="replace-disk - Replace a VM disk in TrueNAS
Usage:
  replace-disk [options] MACHINE [IMGPATH]

Options:
  -S --no-start  Don't start the VM if it was stopped to replace the disk
"
# docopt parser below, refresh this parser with `docopt.sh replace-disk`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { source "$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh" '2.0.0' || {
ret=$?;printf -- "exit %d\n" "$ret";exit "$ret";};set -e
trimmed_doc=${DOC:0:177};usage=${DOC:44:49};digest=c5f1f;options=('-S --no-sta'\
'rt 0');node_0(){ switch __no_start 0;};node_1(){ value MACHINE a;};node_2(){
value IMGPATH a;};node_3(){ optional 0;};node_4(){ optional 2;};node_5(){
sequence 3 1 4;};cat <<<' docopt_exit() { [[ -n $1 ]] && printf "%s\n" "$1" >&2
printf "%s\n" "${DOC:44:49}" >&2;exit 1;}';local varnames=(__no_start MACHINE \
IMGPATH) varname;for varname in "${varnames[@]}"; do unset "var_$varname";done
parse 5 "$@";local p=${DOCOPT_PREFIX:-''};for varname in "${varnames[@]}"; do
unset "$p$varname";done;eval $p'__no_start=${var___no_start:-false};'$p'MACHIN'\
'E=${var_MACHINE:-};'$p'IMGPATH=${var_IMGPATH:-};';local docopt_i=1;[[ \
$BASH_VERSION =~ ^4.3 ]] && docopt_i=2;for ((;docopt_i>0;docopt_i--)); do for \
varname in "${varnames[@]}"; do declare -p "$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$PKGROOT/.upkg/docopt-lib.sh/docopt-lib.sh"' replace-disk`
  eval "$(docopt "$@")"

  cache_all_vms

  local imgpath vmname diskpath
  # shellcheck disable=2153
  vmname=$(get_setting "machines[\"$MACHINE\"].vm")
  imgpath=${IMGPATH:-$PKGROOT/images/$MACHINE.raw}
  diskpath=$(get_setting "machines[\"$MACHINE\"].disk")

  local start_again=false
  # shellcheck disable=2154
  $__no_start || start_again=true

  # shellcheck disable=2153
  replace_vm_disk "$vmname" "$imgpath" "$diskpath" "$start_again"
}

main "$@"
