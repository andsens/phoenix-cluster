#!/usr/bin/env bash
# shellcheck source-path=../../..
set -Eeo pipefail; shopt -s inherit_errexit
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/../../..")

main() {
  # shellcheck disable=SC1091
  source "$PKGROOT/.upkg/records.sh/records.sh"
  # shellcheck source=workloads/settings/lib/settings-env.shellcheck.sh
  source "$PKGROOT/workloads/settings/lib/settings-env.sh"
  eval_settings

  DOC="setup-cluster-dns - Configure CoreDNS as the resolver for the cluster domain
Usage:
  setup-cluster-dns
"
# docopt parser below, refresh this parser with `docopt.sh setup-cluster-dns`
# shellcheck disable=2016,2086,2317,1090,1091,2034
docopt() { local v='2.0.1'; source \
"$PKGROOT/.upkg/docopt-lib-v$v/docopt-lib.sh" "$v" || { ret=$?;printf -- "exit \
%d\n" "$ret";exit "$ret";};set -e;trimmed_doc=${DOC:0:103};usage=${DOC:77:26}
digest=48909;options=();node_0(){ return 0;};cat <<<' docopt_exit() { [[ -n $1 \
]] && printf "%s\n" "$1" >&2;printf "%s\n" "${DOC:77:26}" >&2;exit 1;}';local \
varnames=() varname;for varname in "${varnames[@]}"; do unset "var_$varname"
done;parse 0 "$@";return 0;local p=${DOCOPT_PREFIX:-''};for varname in \
"${varnames[@]}"; do unset "$p$varname";done;eval ;local docopt_i=1;[[ \
$BASH_VERSION =~ ^4.3 ]] && docopt_i=2;for ((;docopt_i>0;docopt_i--)); do for \
varname in "${varnames[@]}"; do declare -p "$p$varname";done;done;}
# docopt parser above, complete command for generating this parser is `docopt.sh --library='"$PKGROOT/.upkg/docopt-lib-v$v/docopt-lib.sh"' setup-cluster-dns`
  eval "$(docopt "$@")"

  local config dns_ips config_path=/etc/systemd/resolved.conf.d/cluster-domain.conf
  dns_ips=$(KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n kube-system get svc kube-dns -o=jsonpath='{.spec.clusterIPs[*]}')
  mkdir -p "$(dirname "$config_path")"
  config=$(printf '[Resolve]
DNS=%s
Domains=~%s ~cluster.local
' "$dns_ips" "$CLUSTER_DOMAIN")
  if [[ ! -e "$config_path" ]] || ! diff -q <(printf "%s" "$config") "$config_path"2>/dev/null; then
    info "Cluster DNS setup validation failed, (re-)creating now."
    printf "%s" "$config" >"$config_path"
    systemctl restart systemd-resolved
  else
    info "Cluster DNS setup validation succeeded"
  fi
}

main "$@"
