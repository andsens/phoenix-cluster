apiVersion: batch/v1
kind: Job
metadata:
  name: build-create-boot-image-arm64
  labels:
    app.kubernetes.io/name: bootstrap
    app.kubernetes.io/component: create-boot-image
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bootstrap
        app.kubernetes.io/component: create-boot-image
        cluster.local/allow-internet-egress: "true"
    spec:
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/arch: arm64
      initContainers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        args:
        - --dockerfile=context/Dockerfile
        - --destination=cluster.local/create-boot-image:$(VARIANT)
        - --build-arg=VARIANT=$(VARIANT)
        - --custom-platform=linux/arm64
        - --tar-path=/workspace/images/create-boot-image:$(VARIANT).tar.tmp
        - --no-push
        env:
        - name: VARIANT
          value: arm64
        - name: GGCR_EXPERIMENT_ESTARGZ
          value: "1"
        volumeMounts:
        - name: context
          mountPath: /workspace/context
        - name: common-context
          mountPath: /workspace/common-context
        - name: images
          mountPath: /workspace/images
      containers:
      - name: move-image
        image: busybox
        args: [mv, /images/create-boot-image:$(VARIANT).tar.tmp, /images/create-boot-image:$(VARIANT).tar]
        env:
        - name: VARIANT
          value: arm64
        volumeMounts:
        - name: images
          mountPath: /images
      volumes:
      - name: context
        configMap:
          name: create-boot-image
      - name: common-context
        configMap:
          name: common-context
          defaultMode: 0755
      - name: images
        hostPath:
          path: /var/lib/persistent/container-images
          type: DirectoryOrCreate
