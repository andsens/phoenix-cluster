#!/usr/bin/env bash
set -Eeo pipefail; shopt -s inherit_errexit
case $1 in
  # We don't have any prerequirements
  prereqs) echo ""; exit 0;;
esac

# shellcheck disable=SC1091
source /scripts/functions
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")
# shellcheck source=../common.sh
source "$PKGROOT/common.sh"

config_src_path=/run/initramfs/boot/node-config.json
config_path=/run/initramfs/node-config.json
if [[ -e /run/initramfs/boot ]]; then
  if cp $config_src_path $config_path.tmp 2>/dev/null; then
    mv $config_path.tmp $config_path
  else
    warning "Failed to read node-config from %s" $config_src_path
  fi
fi
if boot_server=$(get_boot_state boot-server) && primary_mac=$(get_boot_state primary-mac); then
  config_src_addr=http://${boot_server}:8020/node-config/${primary_mac//:/-}.json
  # Download config from boot-server, there might be a newer version (but keep the one from the boot partition so we have a fallback if we don't succeed)
  if curl -fsL --connect-timeout 5 --retry 3 -o $config_path.tmp "$config_src_addr"; then
    mv $config_path.tmp $config_path
    # Update the node-config for this machine on the boot partition
    [[ ! -e /run/initramfs/boot ]] || cp "$config_path" "/run/initramfs/boot/node-config.json"
  else
    warning "Failed to download node-config from %s" "$config_src_addr"
  fi
fi
