#!/bin/sh
set -e
# We don't have any prerequirements
PREREQS=""
case $1 in
	prereqs) echo "${PREREQS}"; exit 0;;
esac

# shellcheck disable=SC1091
. /scripts/functions

set +e; configure_networking; set -e
if [ -z "$ROOTSERVER" ]; then
  log_warning_msg "Skipping download/copy of settings: ROOTSERVER not found in DHCP lease"
  exit 1
fi

# Get the NIC MAC we use to contact the boot server
if ! link=$(ip -o route get to "$ROOTSERVER" | grep -Eo 'dev [^ ]+' | cut -d ' ' -f2); then
  log_failure_msg "Unable to determine interface used to contact $ROOTSERVER, aborting node-settings.json download/copy"
  exit 1
fi
if ! mac=$(ip link show "$link" | tail -n1 | grep -Eo '([a-f0-9]{2}:){5}[a-f0-9]{2}' | head -n1); then
  log_failure_msg "Unable to determine the MAC address of the interface $link, aborting node-settings.json download/copy"
  exit 1
fi

settings_filename=$(printf "%s" "$mac" | sed s/:/-/g).json
settings_path=/run/initramfs/node-settings.json
settings_url=http://$ROOTSERVER/$settings_filename

log_begin_msg "Downloading settings from $settings_url"
if curl -fsL --connect-timeout 5 --retry 3 -o "$settings_path" "$settings_url"; then
  log_end_msg
  exit 0
else
  log_failure_msg "Failed to download settings"
fi

esp=/run/initramfs/efi
if [ -e $esp ]; then
  log_begin_msg "Falling back to copying settings from ESP mount instead"
  if cp "$esp/home-cluster/node-settings/$settings_filename" "$settings_path"; then
    log_end_msg
    exit 0
  else
    log_failure_msg "Failed to copy settings"
  fi
fi

exit 1
