#!/usr/bin/env bash
set -Eeo pipefail; shopt -s inherit_errexit
[[ $1 != prereqs ]] || { echo "create-node-state"; exit 0; }

# shellcheck disable=SC1091
source /scripts/functions
PKGROOT=$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")
# shellcheck source=../common.sh
source "$PKGROOT/common.sh"

ROOTIMG_PATH=/run/initramfs/root.img
# shellcheck disable=SC2013
for kernel_arg in $(cat /proc/cmdline); do
  case $kernel_arg in
  root_sha256=*) ROOT_SHA256=${kernel_arg#root_sha256=} ;;
  esac
done
if [[ -z "${ROOT_SHA256}" ]]; then
  panic "Unable to mount root disk. Boot argument root_sha256= not specified"
  return 1
fi

verify_rootimg() {
  info "Verifying checksum of root.img"
  if printf "%s  %s" "$ROOT_SHA256" $ROOTIMG_PATH.tmp | sha256sum -c -; then
    set_node_state rootimg.sha256 "$ROOT_SHA256"
    mv $ROOTIMG_PATH.tmp $ROOTIMG_PATH
  else
    panic "root.img checksum is incorrect"
    return 1
  fi
}

main() {
  local rootimg_src_path=/run/initramfs/boot-disk/home-cluster/root.img
  if [[ -e $rootimg_src_path ]]; then
    info "Copying root.img from boot partition to RAM"
    if cp $rootimg_src_path $ROOTIMG_PATH.tmp; then
      set_node_state rootimg.src "$rootimg_src_path"
      verify_rootimg
      return 0
    else
      error "Failed to copy root.img, falling back to downloading from boot-server"
      # Try to download root.img instead, the sha256 might not match though
    fi
  fi

  local boot_server rootimg_src_addr
  if boot_server=$(get_node_state boot-server); then
    VARIANT=$(get_node_state variant)
    rootimg_src_addr=https://${boot_server}:8020/images/${VARIANT}/root.img
    info "Downloading root image to RAM from $rootimg_src_addr"
    if curl_boot_server -o $ROOTIMG_PATH.tmp "$rootimg_src_addr"; then
      set_node_state rootimg.src "$rootimg_src_addr"
      verify_rootimg
      return 0
    else
      panic "Failed to download root.img: Download failed"
      return 1
    fi
  else
    panic "Failed to download root.img: boot-server not present in node-state.json"
    return 1
  fi
}

main "$@"
