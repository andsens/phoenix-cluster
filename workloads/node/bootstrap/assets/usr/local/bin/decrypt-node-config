#!/usr/bin/env bash
set -Eeo pipefail; shopt -s inherit_errexit

main() {
  [[ -n $1 ]] || { printf "Usage: decrypt-node-config SRC [DEST]\n" >&2; return 1; }
  local enc_node_config_src=$1 node_config_dest=$2 \
    encrypted_node_config cipher encrypted_config calculated_hmac node_config
  encrypted_node_config=$(cat "$enc_node_config_src")

  cipher=$(
    jq -re '.["encrypted-chipher"]' <<<"$encrypted_node_config" | \
    base64 -d | \
    openssl pkeyutl -pkeyopt rsa_padding_mode:oaep -inkey /run/initramfs/node-key -decrypt | \
    base64 -w0
  )

  encrypted_config=$(jq -re '.["encrypted-config"]' <<<"$encrypted_node_config")
  calculated_hmac=$(
    base64 -d <<<"$encrypted_config" | \
    openssl dgst -sha256 -binary -mac hmac -macopt hexkey:"$(base64 -d  <<<"$cipher" | tail -c +49 | xxd -p -c0)" | \
    base64 -w0
  )
  [[ $calculated_hmac = "$(jq -r '.["encrypted-config-hmac"]' <<<"$encrypted_node_config")" ]] || \
    fatal "Calculated hmac does not match the hmac sent by the server"

  node_config=$(
    base64 -d <<<"$encrypted_config" |  openssl enc -d -aes-256-cbc \
      -iv "$(base64 -d  <<<"$cipher" | tail -c +33 | head -c 16 | xxd -p -c128)" \
      -K "$(base64 -d  <<<"$cipher" | head -c 32 | xxd -p -c128)"
  )
  if [[ -z $node_config_dest || $node_config_dest = '-' ]]; then
    printf "%s\n" "$node_config"
  else
    printf "%s\n" "$node_config" >"$node_config_dest"
  fi
}

main "$@"
