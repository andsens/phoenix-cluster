#!/usr/bin/env bash
set -Eeo pipefail; shopt -s inherit_errexit

main() {
  [[ $# -eq 0 ]] || usage
  set-node-state nics "$(get_nics)" true
  set-node-state blockdevices "$(get_blockdevices)" true
  case "$VARIANT" in
    rpi5) set-node-state rpi "$(get_rpi5)" true ;;
  esac
  submit_node_state
}

get_nics() {
  ip --json link show | jq '[
    .[] |
    select(.ifname != "lo" and (.ifname | startswith("cilium") | not) and (.ifname | startswith("lxc") | not)) |
    {"ifname": .ifname, "mac": .address}
  ]'
}

get_blockdevices() {
  local blockdevices='[]' devpath disk_filesystem disk_partitions
  for devpath in $(lsblk --json --output NAME,FSTYPE,TYPE,MAJ:MIN | jq -r '.blockdevices[] | select(.type=="disk" and .pkname==null) | "/dev/\(.name)"'); do
    disk_filesystem=$(lsblk -Jndo FSTYPE "$devpath" | jq '.blockdevices[0].fstype')
    disk_partitions=$(sfdisk -J "$devpath" 2>/dev/null || printf "null")
    blockdevices=$(jq \
      --arg devpath "$devpath" \
      --argjson fs "$disk_filesystem" \
      --argjson part "$disk_partitions" \
      '. + [{"devpath": $devpath, "filesystem": $fs, "partitions": $part}]' \
      <<<"$blockdevices"
    )
  done
  printf "%s\n" "$blockdevices"
}

get_rpi5() {
  local device_info={}
  device_info=$(jq --arg sn "$(cat /sys/firmware/devicetree/base/serial-number)" '.serialnumber=$sn' <<<"$device_info")
  printf "%s\n" "$device_info"
}

submit_node_state() {
  local jwt result retry=15
  while true; do
    if boot-server-available; then
      jwt=$(sign-jwt node-state)
      if result=$(curl-boot-server "state?jwt=$jwt" \
        -XPUT -d@/run/initramfs/node-state.json -w '%{http_code}' | tail -n1); then
        printf "Successfully reported node-state\n" >&2
        return 0
      else
        if [[ $result = 403 ]]; then
          printf "Reporting node-state not possible, authentication key is invalid, retrying in %ds\n" "$retry" >&2
        else
          printf "Failed to report node-state (HTTP code: %s), retrying in %ds\n" "$result" "$retry" >&2
        fi
      fi
    else
      printf "boot-server is not available, retrying in %ds\n" "$retry" >&2
    fi
    sleep $retry
  done
}

usage() {
  printf "Usage: submit-node-state\n" >&2
  return 1
}

main "$@"
