#!/usr/bin/env bash
# shellcheck source-path=../../..
set -Eeo pipefail; shopt -s inherit_errexit

main() {
  [[ $# -eq 0 ]] || usage
  local meta_json_new
  mkdir -p /boot/home-cluster
  if ! meta_json_new=$(curl-boot-server "images/$VARIANT/meta.json"); then
    printf "Unable to retrieve image metadata from boot server\n" >&2
    return 1
  fi
  local current_root_img_sha256 new_root_img_sha256 first_setup
  if [[ -e /boot/home-cluster/meta.json ]]; then
    first_setup=false
    current_root_img_sha256=$(jq -re '.sha256sums["root.img"]' /boot/home-cluster/meta.json 2>/dev/null || true)
  else
    first_setup=true
  fi
  new_root_img_sha256=$(jq -re '.sha256sums["root.img"]' <<<"$meta_json_new")
  if [[ $current_root_img_sha256 = "$new_root_img_sha256" ]]; then
    printf "boot partition is up-to-date\n" >&2
    return 0
  fi
  printf "boot partition is outdated, updating now\n" >&2
  # shellcheck disable=SC2064
  trap "rm -f \"/boot/home-cluster/root.$new_root_img_sha256.img\"" EXIT
  curl-boot-server "images/$VARIANT/root.$new_root_img_sha256.img" -o"/boot/home-cluster/root.$new_root_img_sha256.img"
  if [[ $VARIANT = rpi* ]]; then
    if curl-boot-server "images/$VARIANT/boot.img" -o/boot/boot.img.new; then
      mv /boot/boot.img.new /boot/boot.img
    else
      rm -f /boot/boot.img.new
      printf "Failed downloading boot.img from boot-server\n" >&2
      return 1
    fi
  else
    local efipath
    case $VARIANT in
      amd64) efipath=/boot/EFI/BOOT/BOOTX64.efi ;;
      arm64) efipath=/boot/EFI/BOOT/BOOTAA64.efi ;;
      *) printf "Unknown variant: %s\n" "$VARIANT" >&2; return 1 ;;
    esac
    mkdir -p /boot/EFI/BOOT
    if curl-boot-server "images/$VARIANT/uki.efi" -o$efipath.new ; then
      mv $efipath.new $efipath
    else
      rm -f $efipath.new
      printf "Failed downloading uki.efi from boot-server\n" >&2
      return 1
    fi
  fi
  trap '' EXIT
  printf "%s\n" "$meta_json_new" >/boot/home-cluster/meta.json
  rm -f "/boot/home-cluster/root.$current_root_img_sha256.img"
  if $first_setup; then
    printf "boot partition has been updated\n" >&2
  else
    printf "boot partition has been updated, rebooting in 10s\n" >&2
    sleep 10
    systemctl reboot
  fi
}

usage() {
  printf "Usage: update-boot\n" >&2
  return 1
}

main "$@"
