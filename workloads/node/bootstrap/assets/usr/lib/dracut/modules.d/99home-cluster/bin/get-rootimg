#!/usr/bin/env bash
set -Eeo pipefail; shopt -s inherit_errexit
# shellcheck disable=SC1091
source /lib/dracut-lib.sh || true
# shellcheck source=../lib/shellcheck-common.sh
source /usr/lib/home-cluster/common.sh

ROOT_IMG=/run/initramfs/root.img
ROOT_SHA256=$(getarg root_sha256 || true)

if [[ ! $ROOT_SHA256 =~ ^[0-9a-f]{64}$ ]]; then
  fatal "root_sha256= argument is not SHA-256 hash, unable to continue"
fi

verify_rootimg() {
  info "Verifying checksum of root.img"
  if sha256sum -c - <<<"$ROOT_SHA256  $ROOT_IMG.tmp"; then
    set_node_state rootimg.sha256 "$ROOT_SHA256"
    mv $ROOT_IMG.tmp $ROOT_IMG
  else
    fatal "root.img checksum is incorrect"
  fi
}

main() {
  local rootimg_src_path=/boot/home-cluster/root.$ROOT_SHA256.img
  if [[ -e $rootimg_src_path ]]; then
    info "Copying root.img from boot partition to RAM"
    if cp "$rootimg_src_path" $ROOT_IMG.tmp; then
      if verify_rootimg; then
        set_node_state rootimg.src "$rootimg_src_path"
        return 0
      else
        info "Falling back to downloading root.img from boot-server"
      fi
    else
      error "Failed to copy root.img, falling back to downloading from boot-server"
      # Try to download root.img instead, the sha256 might not match though
    fi
  fi

  local boot_server rootimg_src_addr
  if boot_server=$(get_node_state boot-server); then
    VARIANT=$(get_node_state variant)
    rootimg_src_addr=https://${boot_server}:8020/images/${VARIANT}/root.$ROOT_SHA256.img
    info "Downloading root image to RAM from $rootimg_src_addr"
    if curl_boot_server -o$ROOT_IMG.tmp "$rootimg_src_addr"; then
      if ! verify_rootimg; then
        fatal "Unable to continue"
      else
        set_node_state rootimg.src "$rootimg_src_addr"
        return 0
      fi
    else
      fatal "Failed to download root.img: Download failed"
    fi
  else
    fatal "Failed to download root.img: boot-server not present in node-state.json"
  fi
}

main "$@"
