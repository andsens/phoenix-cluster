---
apiVersion: batch/v1
kind: Job
metadata:
  name: build-amd64
  labels:
    app.kubernetes.io/name: bootstrap
    app.kubernetes.io/component: amd64
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bootstrap
        app.kubernetes.io/component: amd64
        cluster.local/allow-internet-egress: "true"
    spec:
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/arch: amd64
      initContainers:
      - name: initialize-new-run
        image: busybox
        command: [bash, -c, rm -rf /images/$(VARIANT).new; mkdir /images/$(VARIANT).new]
        env:
        - name: VARIANT
          value: amd64
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        args:
        - --dockerfile=context/Dockerfile
        - --build-arg=VARIANT=$(VARIANT)
        - --custom-platform=linux/amd64
        - --destination=cluster.local/non-existent
        - --tar-path=/images/$(VARIANT).new/node.tar
        - --no-push
        env:
        - name: VARIANT
          value: amd64
        volumeMounts:
        - name: context
          mountPath: /workspace/context
        - name: common-context
          mountPath: /workspace/common-context
        - name: bundle
          mountPath: /workspace/home-cluster.tar.gz
          subPath: home-cluster.tar.gz
        - name: images
          mountPath: /images
      containers:
      - name: create-boot-image
        image: cluster.local/create-boot-image:amd64
        imagePullPolicy: Never
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: assets
          mountPath: /assets
        - name: workspace
          mountPath: /workspace
        - name: images
          mountPath: /images
        - name: secureboot
          mountPath: /secureboot
      volumes:
      - name: context
        configMap:
          name: node
      - name: scripts
        configMap:
          name: create-boot-image-scripts
          defaultMode: 0755
      - name: assets
        configMap:
          name: create-boot-image-assets
      - name: common-context
        configMap:
          name: common-context
          defaultMode: 0755
      - name: bundle
        configMap:
          name: bundle
      - name: workspace
        emptyDir: {}
      - name: images
        persistentVolumeClaim:
          claimName: images
