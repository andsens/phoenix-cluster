---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
rules:
- apiGroups: [""]
  resources: [nodes]
  verbs: [get, list]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: boot-server
subjects:
- kind: ServiceAccount
  name: boot-server
---
apiVersion: v1
kind: Service
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
  ports:
  - name: registry
    port: 8020
    targetPort: api
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  commonName: boot-server.node.svc.cluster.local
  issuerRef:
    group: certmanager.step.sm
    kind: StepClusterIssuer
    name: step-issuer
  secretName: boot-server-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: images
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: images
spec:
  storageClassName: longhorn
  accessModes: [ReadWriteOnce]
  resources: {requests: {storage: 10Gi}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: node
      app.kubernetes.io/component: boot-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node
        app.kubernetes.io/component: boot-server
    spec:
      serviceAccountName: boot-server
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      hostNetwork: true
      containers:
      - name: boot-server
        image: cluster.local/boot-server:latest
        imagePullPolicy: Never
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop: [ALL]
            add:
            - NET_ADMIN
            - NET_BIND_SERVICE
            - NET_RAW
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ETCD_URL
          value: http://etcd.etcd.svc.cluster.local:2379
        - name: LOGFORMAT
          value: logfmt
        ports:
        - name: api
          containerPort: 8020
          hostPort: 8020
        - name: dhcp
          containerPort: 67
          protocol: UDP
          hostPort: 67
        - name: dhcp-proxy
          containerPort: 4011
          protocol: UDP
          hostPort: 4011
        - name: tftp
          containerPort: 69
          protocol: UDP
          hostPort: 69
        volumeMounts:
        - name: scripts
          mountPath: /boot-server
        - name: k3s-token
          mountPath: /data/k3s-token
          readOnly: true
        - name: host-machine-id
          mountPath: /data/host/machine-id
          readOnly: true
        - name: host-node-state
          mountPath: /data/host/node-state.json
          readOnly: true
        - name: host-node-config
          mountPath: /data/host/node-config.json
          readOnly: true
        - name: host-authn-key
          mountPath: /data/host/authn-key.json
          readOnly: true
        - name: boot-server-tls
          mountPath: /data/tls
        - name: config
          mountPath: /data/boot-map.yaml
          subPath: boot-map.yaml
        - name: config
          mountPath: /data/map-file
          subPath: tftpd-map-file
        - name: admin-pubkey
          mountPath: /data/admin.pub
          subPath: admin.pub
        - name: images
          mountPath: /data/images
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: boot-server-config
      - name: scripts
        configMap:
          name: boot-server-scripts
          defaultMode: 0755
      - name: images
        persistentVolumeClaim:
          claimName: images
      - name: boot-server-tls
        secret:
          secretName: boot-server-tls
      - name: k3s-token
        hostPath:
          path: /var/lib/rancher/k3s/server/token
          type: File
      - name: host-machine-id
        hostPath:
          path: /etc/machine-id
          type: File
      - name: host-node-state
        hostPath:
          path: /run/initramfs/node-state.json
          type: File
      - name: host-node-config
        hostPath:
          path: /run/initramfs/node-config.json
          type: File
      - name: host-authn-key
        hostPath:
          path: /run/initramfs/authn-key.json
          type: File
      - name: admin-pubkey
        configMap:
          name: admin-pubkey
      - name: tmp
        emptyDir: {}
      - name: dnsmasq-leases
        emptyDir: {}
