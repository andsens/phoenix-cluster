---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
rules:
- apiGroups: [""]
  resources: [nodes]
  verbs: [get, list]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: boot-server
subjects:
- kind: ServiceAccount
  name: boot-server
---
apiVersion: v1
kind: Service
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
  ports:
  - name: registry
    port: 8020
    targetPort: api
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  commonName: boot-server.node.svc.cluster.local
  issuerRef:
    group: certmanager.step.sm
    kind: StepClusterIssuer
    name: step-issuer
  secretName: boot-server-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: node
    app.kubernetes.io/component: boot-server
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: node
      app.kubernetes.io/component: boot-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node
        app.kubernetes.io/component: boot-server
    spec:
      serviceAccountName: boot-server
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      hostNetwork: true
      containers:

      - name: registry
        image: cluster.local/registry:latest
        imagePullPolicy: Never
        securityContext:
          readOnlyRootFilesystem: true
        ports:
        - name: api
          containerPort: 8020
          hostPort: 8020
        volumeMounts:
        - name: scripts
          mountPath: /registry/registry.py
          subPath: registry.py
        - name: k3s-token
          mountPath: /secrets/k3s-token
          readOnly: true
        - name: boot-server-tls
          mountPath: /data/tls
        - name: node-authn-keys
          mountPath: /data/node-authn-keys
        - name: node-configs
          mountPath: /data/node-configs
        - name: node-states
          mountPath: /data/node-states
        - name: registry-tmp
          mountPath: /tmp
        - name: admin-pubkey
          mountPath: /data/admin.pub
          subPath: admin.pub
        - name: images
          mountPath: /data/images

      - name: dhcp-proxy
        image: cluster.local/dhcp-proxy:latest
        imagePullPolicy: Never
        args:
        - $(HOST_IP)
        - $(TFTPD_ADDR)
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop: [ALL]
            add:
            - NET_ADMIN
            - NET_BIND_SERVICE
            - NET_RAW
            - SETGID
            - SETUID
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: TFTPD_ADDR
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        ports:
        - name: dhcp
          containerPort: 67
          protocol: UDP
          hostPort: 67
        - name: dhcp-proxy
          containerPort: 4011
          protocol: UDP
          hostPort: 4011
        volumeMounts:
        - name: scripts
          mountPath: /dhcp-proxy/dhcp-proxy.py
          subPath: dhcp-proxy.py
        - name: config
          mountPath: /dhcp-proxy/boot-map.yaml
          subPath: boot-map.yaml

      - name: tftpd
        image: cluster.local/tftpd:latest
        imagePullPolicy: Never
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop: [ALL]
            add:
            - NET_BIND_SERVICE
            - NET_ADMIN
            - NET_RAW
            - SETUID
            - SETGID
            - SYS_CHROOT
            - SIGNAL
            - CAP_KILL
        env:
        # Used to select which interface tcpdump should filter for
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        ports:
        - name: tftp
          containerPort: 69
          protocol: UDP
          hostPort: 69
        volumeMounts:
        - name: scripts
          mountPath: /tftpd.sh
          subPath: tftpd.sh
        - name: config
          mountPath: /config/map-file
          subPath: tftpd-map-file
        - name: images
          mountPath: /tftp/images
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: boot-server-config
      - name: scripts
        configMap:
          name: boot-server-scripts
          defaultMode: 0755
      - name: images
        persistentVolumeClaim:
          claimName: images
      - name: boot-server-tls
        secret:
          secretName: boot-server-tls
      - name: k3s-token
        hostPath:
          path: /var/lib/rancher/k3s/server/token
          type: File
      - name: admin-pubkey
        configMap:
          name: admin-pubkey
      - name: node-authn-keys
        configMap:
          name: node-authn-keys
      - name: node-configs
        secret:
          secretName: node-configs
      - name: node-states
        configMap:
          name: node-states
      - name: registry-tmp
        emptyDir: {}
      - name: dnsmasq-leases
        emptyDir: {}
