---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: pxe
    app.kubernetes.io/component: boot-server
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: pxe
      app.kubernetes.io/component: boot-server
  ingress:
  - toPorts:
    - ports:
      - port: "80"
    fromEntities:
    - all
---
apiVersion: v1
kind: Service
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: pxe
    app.kubernetes.io/component: boot-server
  annotations:
    io.cilium/lb-ipam-ips: "cluster.bootServer.fixedIPv4,cluster.bootServer.fixedIPv6"
spec:
  type: LoadBalancer
  ipFamilies: [IPv4, IPv6]
  ipFamilyPolicy: RequireDualStack
  selector:
    app.kubernetes.io/name: pxe
    app.kubernetes.io/component: boot-server
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boot-server
  labels:
    app.kubernetes.io/name: pxe
    app.kubernetes.io/component: boot-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pxe
      app.kubernetes.io/component: boot-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pxe
        app.kubernetes.io/component: boot-server
    spec:
      containers:
      - name: nginx
        image: distribution.docker-registry.svc.cluster.local/boot-server:latest
        imagePullPolicy: Always
        securityContext:
          readOnlyRootFilesystem: true
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: home-cluster
          mountPath: /var/lib/home-cluster
        - name: home-cluster
          mountPath: /etc/nginx/nginx.conf
          subPath: workloads/pxe/config/boot-server.conf
        - name: images
          mountPath: /images/pxe
          subPath: pxe
          readOnly: true
        - name: pxe-manifests
          mountPath: /pxe-manifests
        - name: nginx-lib
          mountPath: /var/lib/nginx
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: home-cluster
        persistentVolumeClaim:
          claimName: home-cluster
      - name: images
        persistentVolumeClaim:
          claimName: images
      - name: pxe-manifests
        emptyDir: {}
      - name: nginx-lib
        emptyDir: {}
      - name: tmp
        emptyDir: {}
