#!/bin/sh
set -e
# We don't have any prerequirements
PREREQS=""
case $1 in
	prereqs) echo "${PREREQS}"; exit 0;;
esac

# shellcheck disable=SC1091
. /scripts/functions

# shellcheck disable=SC2013
for x in $(cat /proc/cmdline); do
  case $x in
  bootserver=*)
    bootserver=${x#bootserver=}
    ;;
  esac
done
if [ -z "${bootserver}" ]; then
  log_warning_msg "Skipping download/copy of settings. Boot argument bootserver= not specified, unable to determine MAC address"
  exit 1
fi

set +e; configure_networking; set -e

# Get the NIC MAC we use to contact the boot server
if ! link=$(ip -o route get to "$bootserver" | grep -Eo 'dev [^ ]+' | cut -d ' ' -f2); then
  log_failure_msg "Unable to determine interface used to contact $bootserver, aborting node-settings.json download/copy"
  exit 1
fi
if ! mac=$(ip link show "$link" | tail -n1 | grep -Eo '([a-f0-9]{2}:){5}[a-f0-9]{2}' | head -n1); then
  log_failure_msg "Unable to determine the MAC address of the interface $link, aborting node-settings.json download/copy"
  exit 1
fi

settings_path=/run/initramfs/node-settings.json
settings_url=http://$bootserver/$mac.json

log_begin_msg "Downloading settings from $settings_url"
if wget -qO"$settings_path" "$settings_url"; then
  log_end_msg
  exit 0
else
  log_failure_msg "Failed to download settings."
fi

esp=/run/initramfs/efi
if [ -e $esp ]; then
  log_begin_msg "Falling back to copying settings from ESP mount instead"
  if cp "/run/initramfs/efi/home-cluster/latest/node-settings/$(printf "%s" "$mac" | sed s/:/-/g).json" "$settings_path"; then
    log_end_msg
    exit 0
  else
    log_failure_msg "Failed to copy settings"
  fi
fi

exit 1
