apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: docker-registry
resources:
- ../settings
- auth.yaml
- distribution.yaml
- kube-apiserver-client-ca.yaml
- namespace.yaml
- Kptfile
- resourcegroup.yaml
replacements:
- source: {fieldPath: data.cluster.domain, kind: ConfigMap, name: settings}
  targets:
  - select: {group: networking.k8s.io, kind: Ingress, name: distribution}
    fieldPaths: [spec.tls.0.hosts.0]
    options: {delimiter: '.', index: 1}
  - select: {group: networking.k8s.io, kind: Ingress, name: distribution}
    fieldPaths: [spec.rules.0.host]
    options: {delimiter: '.', index: 1}
  - select: {group: networking.k8s.io, kind: Ingress, name: docker-auth}
    fieldPaths: [spec.tls.0.hosts.0]
    options: {delimiter: '.', index: 1}
  - select: {group: networking.k8s.io, kind: Ingress, name: docker-auth}
    fieldPaths: [spec.rules.0.host]
    options: {delimiter: '.', index: 1}
  - select: {group: apps, kind: Deployment, name: distribution}
    fieldPaths: ["spec.template.spec.containers.[name=distribution].env.[name=DOMAIN].value"]
    options: {delimiter: '.', index: 1}
- source: {fieldPath: data.cluster.acmeProvider.group, kind: ConfigMap, name: settings}
  targets:
  - select: {group: networking.k8s.io, kind: Ingress, name: distribution}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer-group]
  - select: {group: networking.k8s.io, kind: Ingress, name: docker-auth}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer-group]
- source: {fieldPath: data.cluster.acmeProvider.kind, kind: ConfigMap, name: settings}
  targets:
  - select: {group: networking.k8s.io, kind: Ingress, name: distribution}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer-kind]
  - select: {group: networking.k8s.io, kind: Ingress, name: docker-auth}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer-kind]
- source: {fieldPath: data.cluster.acmeProvider.issuer, kind: ConfigMap, name: settings}
  targets:
  - select: {group: networking.k8s.io, kind: Ingress, name: distribution}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer]
  - select: {group: networking.k8s.io, kind: Ingress, name: docker-auth}
    fieldPaths: [metadata.annotations.cert-manager\.io/issuer]
- source: {fieldPath: data.nfsShares.homeCluster.addr, kind: ConfigMap, name: settings}
  targets:
  - select: {group: apps}
    fieldPaths: ["spec.template.spec.volumes.[name=home-cluster].nfs.server"]
  - select: {group: batch, kind: Job, name: create-kube-apiserver-client-ca-secret}
    fieldPaths: ["spec.template.spec.volumes.[name=home-cluster].nfs.server"]
  - select: {group: batch, kind: CronJob}
    fieldPaths: ["spec.jobTemplate.spec.template.spec.volumes.[name=home-cluster].nfs.server"]
- source: {fieldPath: data.nfsShares.homeCluster.path, kind: ConfigMap, name: settings}
  targets:
  - select: {group: apps}
    fieldPaths: ["spec.template.spec.volumes.[name=home-cluster].nfs.path"]
  - select: {group: batch, kind: Job, name: create-kube-apiserver-client-ca-secret}
    fieldPaths: ["spec.template.spec.volumes.[name=home-cluster].nfs.path"]
  - select: {group: batch, kind: CronJob}
    fieldPaths: ["spec.jobTemplate.spec.template.spec.volumes.[name=home-cluster].nfs.path"]
- source: {fieldPath: data.machines.k8sMaster.hostname, kind: ConfigMap, name: settings}
  targets:
  - select: {group: batch, kind: Job, name: create-kube-apiserver-client-ca-secret}
    fieldPaths: [spec.template.spec.nodeSelector.kubernetes\.io/hostname]
